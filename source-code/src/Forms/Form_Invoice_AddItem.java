/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Forms;

import Models.Invoice;
import Repositories.InvoiceRepository;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;

/**
 *
 * @author ThanhNhan
 */
public class Form_Invoice_AddItem extends javax.swing.JDialog {

    private InvoiceRepository invoiceRepo = new InvoiceRepository();
    
    public interface DataChangedListener {
        void onDataChanged();
    }
    
    private InvoiceRepository customerRepo = new InvoiceRepository();
    private DataChangedListener dataChangedListener;
    
    public void setDataChangedListener(DataChangedListener listener) {
        this.dataChangedListener = listener;
    }
    /**
     * Creates new form Form_Invoice_AddItem
     */
    public Form_Invoice_AddItem(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    private java.sql.Date convertStringToDate(String dateString) {
        try {
            SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd"); 
            java.util.Date parsed = format.parse(dateString);
            return new java.sql.Date(parsed.getTime());
        } catch (ParseException e) {
            JOptionPane.showMessageDialog(this, "Định dạng ngày không hợp lệ. Vui lòng nhập theo yyyy-MM-dd.");
            return null;
        }
    }
    
    private void clearFields() {
        txtInvoiceID.setText("");       
        txtDateCreate.setText("");   
        txtPaymentMethod.setText("");
        txtTotal.setText("");  
        txtEmployeeCreateID.setText("");  
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtInvoiceID = new javax.swing.JTextField();
        txtDateCreate = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtPaymentMethod = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtTotal = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtEmployeeCreateID = new javax.swing.JTextField();
        btnBack = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Thêm thông tin hóa đơn");
        setPreferredSize(new java.awt.Dimension(780, 900));
        getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel1.setText("THÔNG TIN HÓA ĐƠN");
        jLabel1.setAlignmentX(0.5F);
        getContentPane().add(jLabel1);
        jLabel1.setBounds(256, 25, 218, 40);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel2.setText("Mã hóa đơn:");
        jLabel2.setAlignmentX(0.5F);
        getContentPane().add(jLabel2);
        jLabel2.setBounds(35, 83, 150, 40);

        txtInvoiceID.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        txtInvoiceID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtInvoiceIDActionPerformed(evt);
            }
        });
        getContentPane().add(txtInvoiceID);
        txtInvoiceID.setBounds(35, 123, 235, 40);

        txtDateCreate.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        getContentPane().add(txtDateCreate);
        txtDateCreate.setBounds(35, 223, 235, 40);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel3.setText("Ngày lập hóa đơn:");
        jLabel3.setAlignmentX(0.5F);
        getContentPane().add(jLabel3);
        jLabel3.setBounds(35, 183, 150, 40);

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel4.setText("Phương thức thanh toán:");
        jLabel4.setAlignmentX(0.5F);
        getContentPane().add(jLabel4);
        jLabel4.setBounds(35, 283, 235, 40);

        txtPaymentMethod.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        getContentPane().add(txtPaymentMethod);
        txtPaymentMethod.setBounds(35, 323, 235, 40);

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel5.setText("Thành tiền:");
        jLabel5.setAlignmentX(0.5F);
        getContentPane().add(jLabel5);
        jLabel5.setBounds(452, 83, 150, 40);

        txtTotal.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        getContentPane().add(txtTotal);
        txtTotal.setBounds(452, 123, 235, 40);

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel6.setText("Mã nhân viên lập HD:");
        jLabel6.setAlignmentX(0.5F);
        getContentPane().add(jLabel6);
        jLabel6.setBounds(452, 183, 204, 40);

        txtEmployeeCreateID.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        getContentPane().add(txtEmployeeCreateID);
        txtEmployeeCreateID.setBounds(452, 223, 235, 40);

        btnBack.setBackground(new java.awt.Color(204, 255, 204));
        btnBack.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        btnBack.setText("Quay lại");
        btnBack.setAlignmentX(0.5F);
        btnBack.setBorderPainted(false);
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        getContentPane().add(btnBack);
        btnBack.setBounds(452, 406, 100, 40);

        btnAdd.setBackground(new java.awt.Color(204, 255, 204));
        btnAdd.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        btnAdd.setText("Thêm");
        btnAdd.setAlignmentX(0.5F);
        btnAdd.setBorderPainted(false);
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });
        getContentPane().add(btnAdd);
        btnAdd.setBounds(170, 406, 100, 40);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtInvoiceIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtInvoiceIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtInvoiceIDActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        try {
            String invoiceID = txtInvoiceID.getText().trim();
            String dateCreateString = txtDateCreate.getText();
            java.sql.Date dateCreate = convertStringToDate(dateCreateString);
            String paymentMethod = txtPaymentMethod.getText().trim();
            int total = Integer.parseInt(txtTotal.getText().trim());
            String employeeID = txtEmployeeCreateID.getText().trim();

            if (invoiceID.isEmpty() || dateCreate == null || paymentMethod.isEmpty()
                || txtTotal.getText().trim().isEmpty() || employeeID.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Vui lòng nhập đầy đủ thông tin!", "Lỗi", JOptionPane.ERROR_MESSAGE);
                return;
            }

            Invoice invoice = new Invoice(invoiceID, dateCreate, paymentMethod, total, employeeID);
            boolean isAdded = invoiceRepo.addInvoice(invoice);

            if (isAdded) {
                JOptionPane.showMessageDialog(this, "Thêm hóa đơn thành công!");
                if (dataChangedListener != null) {
                    dataChangedListener.onDataChanged();
                }
                clearFields();
            } else {
                JOptionPane.showMessageDialog(this, "Thêm hóa đơn thất bại!", "Lỗi", JOptionPane.ERROR_MESSAGE);
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập số hợp lệ cho thành tiền!", "Lỗi", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnAddActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Form_Invoice_AddItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Form_Invoice_AddItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Form_Invoice_AddItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Form_Invoice_AddItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Form_Invoice_AddItem dialog = new Form_Invoice_AddItem(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnBack;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JTextField txtDateCreate;
    private javax.swing.JTextField txtEmployeeCreateID;
    private javax.swing.JTextField txtInvoiceID;
    private javax.swing.JTextField txtPaymentMethod;
    private javax.swing.JTextField txtTotal;
    // End of variables declaration//GEN-END:variables
}
