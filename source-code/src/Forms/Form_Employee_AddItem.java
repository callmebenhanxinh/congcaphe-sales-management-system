/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Forms;

import Models.Position;
import Repositories.EmployeeRepository;
import Repositories.PositionRepository;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
/**
 *
 * @author ThanhNhan
 */
public class Form_Employee_AddItem extends javax.swing.JDialog {
    public interface DataChangedListener {
        void onDataChanged();
    }
    
    private Map<String, String> positionMap;
    private EmployeeRepository employeeRepo = new EmployeeRepository();
    private DataChangedListener dataChangedListener;
    private PositionRepository positionRepo = new PositionRepository();
    private List<Position> positionList;
    
    public void setDataChangedListener(DataChangedListener listener) {
        this.dataChangedListener = listener;
    }
    /** 
     * Creates new form Form_Employee_AddItem
     */
    public Form_Employee_AddItem(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        genderGroup.add(rdbGender_Male);
        genderGroup.add(rdbGender_Female);
        
        PositionRepository positionRepo = new PositionRepository();
        positionMap = positionRepo.getPositionNameIdMap();

        for (String positionName : positionMap.keySet()) {
            cboPositionName.addItem(positionName);
        }
        
        cboPositionName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboPositionNameActionPerformed(evt);
            }
        });
    }

    private void cboPositionNameActionPerformed(java.awt.event.ActionEvent evt) {
        String selectedPositionName = (String) cboPositionName.getSelectedItem();

        if (selectedPositionName != null && positionMap.containsKey(selectedPositionName)) {
            String positionID = positionMap.get(selectedPositionName);

            txtIDPosition.setText(positionID);
        } else {
            txtIDPosition.setText("");
        }
    }
     
    private java.sql.Date convertStringToDate(String dateString) {
        try {
            SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd"); 
            java.util.Date parsed = format.parse(dateString);
            return new java.sql.Date(parsed.getTime());
        } catch (ParseException e) {
            JOptionPane.showMessageDialog(this, "Định dạng ngày không hợp lệ. Vui lòng nhập theo yyyy-MM-dd.");
            return null;
        }
    }
    
    private void clearFields() {
        txtEmployeeID.setText("");       
        txtEmployeeName.setText("");   
        txtEmployeeDOB.setText("");
        rdbGender_Female.setSelected(false);
        rdbGender_Male.setSelected(false);
        txtEmployeeAddress.setText("");  
        txtEmployeePhone.setText("");  
        txtEmployeeDOW.setText("");
        txtEmployeeUsername.setText(""); 
        txtEmployeePassword.setText(""); 
        txtIDPosition.setText(""); 
        cboPositionName.getItemAt(0); 
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        genderGroup = new javax.swing.ButtonGroup();
        txtEmployeeName = new javax.swing.JTextField();
        txtEmployeePassword = new javax.swing.JTextField();
        txtEmployeeDOB = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtEmployeePhone = new javax.swing.JTextField();
        txtIDPosition = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtEmployeeUsername = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtEmployeeDOW = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        rdbGender_Female = new javax.swing.JRadioButton();
        rdbGender_Male = new javax.swing.JRadioButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txtEmployeeAddress = new javax.swing.JTextField();
        txtEmployeeID = new javax.swing.JTextField();
        btnBack = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        cboPositionName = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Thêm thông tin nhân viên");
        setModal(true);
        setPreferredSize(new java.awt.Dimension(750, 900));
        getContentPane().setLayout(null);

        txtEmployeeName.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        getContentPane().add(txtEmployeeName);
        txtEmployeeName.setBounds(59, 246, 235, 40);

        txtEmployeePassword.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        getContentPane().add(txtEmployeePassword);
        txtEmployeePassword.setBounds(430, 356, 235, 40);

        txtEmployeeDOB.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        getContentPane().add(txtEmployeeDOB);
        txtEmployeeDOB.setBounds(59, 455, 235, 40);

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel13.setText("Mã chức vụ:");
        jLabel13.setAlignmentX(0.5F);
        getContentPane().add(jLabel13);
        jLabel13.setBounds(430, 414, 150, 40);

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel11.setText("Ngày vào làm:");
        jLabel11.setAlignmentX(0.5F);
        getContentPane().add(jLabel11);
        jLabel11.setBounds(430, 90, 150, 40);

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel4.setText("Ngày sinh:");
        jLabel4.setAlignmentX(0.5F);
        getContentPane().add(jLabel4);
        jLabel4.setBounds(59, 414, 150, 40);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel3.setText("Họ tên nhân viên:");
        jLabel3.setAlignmentX(0.5F);
        getContentPane().add(jLabel3);
        jLabel3.setBounds(59, 204, 150, 40);

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel12.setText("Tên chức vụ:");
        jLabel12.setAlignmentX(0.5F);
        getContentPane().add(jLabel12);
        jLabel12.setBounds(430, 525, 150, 40);

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel5.setText("Địa chỉ:");
        jLabel5.setAlignmentX(0.5F);
        getContentPane().add(jLabel5);
        jLabel5.setBounds(59, 525, 150, 40);

        txtEmployeePhone.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        getContentPane().add(txtEmployeePhone);
        txtEmployeePhone.setBounds(59, 678, 235, 40);

        txtIDPosition.setEditable(false);
        txtIDPosition.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        getContentPane().add(txtIDPosition);
        txtIDPosition.setBounds(430, 455, 235, 40);

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel7.setText("Tên đăng nhập:");
        jLabel7.setAlignmentX(0.5F);
        getContentPane().add(jLabel7);
        jLabel7.setBounds(430, 204, 150, 40);

        txtEmployeeUsername.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        getContentPane().add(txtEmployeeUsername);
        txtEmployeeUsername.setBounds(430, 246, 235, 40);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel2.setText("Mã nhân viên:");
        jLabel2.setAlignmentX(0.5F);
        getContentPane().add(jLabel2);
        jLabel2.setBounds(59, 90, 150, 40);

        txtEmployeeDOW.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        getContentPane().add(txtEmployeeDOW);
        txtEmployeeDOW.setBounds(430, 130, 235, 40);

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel10.setText("Mật khẩu:");
        jLabel10.setAlignmentX(0.5F);
        getContentPane().add(jLabel10);
        jLabel10.setBounds(430, 316, 150, 40);

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel6.setText("Số điện thoại:");
        jLabel6.setAlignmentX(0.5F);
        getContentPane().add(jLabel6);
        jLabel6.setBounds(59, 636, 150, 40);

        rdbGender_Female.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        rdbGender_Female.setText("Nữ");
        rdbGender_Female.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbGender_FemaleActionPerformed(evt);
            }
        });
        getContentPane().add(rdbGender_Female);
        rdbGender_Female.setBounds(206, 356, 88, 40);

        rdbGender_Male.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        rdbGender_Male.setText("Nam");
        getContentPane().add(rdbGender_Male);
        rdbGender_Male.setBounds(59, 356, 90, 40);

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel9.setText("Giới tính:");
        jLabel9.setAlignmentX(0.5F);
        getContentPane().add(jLabel9);
        jLabel9.setBounds(59, 316, 150, 40);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel1.setText("THÔNG TIN NHÂN VIÊN");
        jLabel1.setAlignmentX(0.5F);
        getContentPane().add(jLabel1);
        jLabel1.setBounds(239, 34, 237, 40);

        txtEmployeeAddress.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        getContentPane().add(txtEmployeeAddress);
        txtEmployeeAddress.setBounds(59, 566, 235, 40);

        txtEmployeeID.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        txtEmployeeID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmployeeIDActionPerformed(evt);
            }
        });
        getContentPane().add(txtEmployeeID);
        txtEmployeeID.setBounds(59, 130, 235, 40);

        btnBack.setBackground(new java.awt.Color(204, 255, 204));
        btnBack.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        btnBack.setText("Quay lại");
        btnBack.setAlignmentX(0.5F);
        btnBack.setBorderPainted(false);
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        getContentPane().add(btnBack);
        btnBack.setBounds(430, 763, 125, 50);

        btnAdd.setBackground(new java.awt.Color(204, 255, 204));
        btnAdd.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        btnAdd.setText("Thêm");
        btnAdd.setAlignmentX(0.5F);
        btnAdd.setBorderPainted(false);
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });
        getContentPane().add(btnAdd);
        btnAdd.setBounds(169, 759, 125, 50);

        getContentPane().add(cboPositionName);
        cboPositionName.setBounds(430, 565, 235, 45);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void rdbGender_FemaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbGender_FemaleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdbGender_FemaleActionPerformed

    private void txtEmployeeIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmployeeIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmployeeIDActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        String employeeID = txtEmployeeID.getText().trim();
        String employeeName = txtEmployeeName.getText().trim();
        String employeeGender = rdbGender_Male.isSelected() ? "Nam" : "Nữ";
        String dobString = txtEmployeeDOB.getText();
        java.sql.Date dob = convertStringToDate(dobString);
        String employeeAddress = txtEmployeeAddress.getText().trim();
        String employeePhone = txtEmployeePhone.getText().trim();
        String dowString = txtEmployeeDOW.getText();
        java.sql.Date dow = convertStringToDate(dowString);
        String employeeUsername = txtEmployeeUsername.getText().trim();
        String employeePassword = txtEmployeePassword.getText().trim();
        String selectedPositionName = (String) cboPositionName.getSelectedItem();
        String positionID = positionMap.get(selectedPositionName);

        if (employeeID.isEmpty() || employeeName.isEmpty() || employeeGender == null || employeeAddress.isEmpty()
            || employeePhone.isEmpty() || employeeUsername.isEmpty() || employeePassword.isEmpty() || positionID == null) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập đầy đủ thông tin nhân viên.");
            return;
        }

        Models.Employee employee = new Models.Employee(
            employeeID, employeeName, employeeGender, dob, employeeAddress, employeePhone, dow, employeeUsername, employeePassword, positionID);
        if (employeeRepo.addEmployee(employee)) {
            JOptionPane.showMessageDialog(this, "Thêm nhân viên thành công!");
            clearFields();
            if (dataChangedListener != null) {
                dataChangedListener.onDataChanged();
            }
            dispose();
        } else {
            JOptionPane.showMessageDialog(this, "Thêm nhân viên thất bại!");
        }
    }//GEN-LAST:event_btnAddActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Form_Employee_AddItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Form_Employee_AddItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Form_Employee_AddItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Form_Employee_AddItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Form_Employee_AddItem dialog = new Form_Employee_AddItem(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnBack;
    private javax.swing.JComboBox<String> cboPositionName;
    private javax.swing.ButtonGroup genderGroup;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JRadioButton rdbGender_Female;
    private javax.swing.JRadioButton rdbGender_Male;
    private javax.swing.JTextField txtEmployeeAddress;
    private javax.swing.JTextField txtEmployeeDOB;
    private javax.swing.JTextField txtEmployeeDOW;
    private javax.swing.JTextField txtEmployeeID;
    private javax.swing.JTextField txtEmployeeName;
    private javax.swing.JTextField txtEmployeePassword;
    private javax.swing.JTextField txtEmployeePhone;
    private javax.swing.JTextField txtEmployeeUsername;
    private javax.swing.JTextField txtIDPosition;
    // End of variables declaration//GEN-END:variables
}
